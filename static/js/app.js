// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
//Telegram.WebApp.ready();
document.addEventListener("DOMContentLoaded", () => {
  const slotsButton = document.getElementById("slots");
  const slotsContainer = document.getElementById("slots-container");
  const slots = document.querySelectorAll(".slot");
  const resultElement = document.getElementById("game-result");

  if (!slotsButton || !slotsContainer || !slots.length) {
    console.error("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Å–ª–æ—Ç–æ–≤.");
    return;
  }

  slotsButton.addEventListener("click", async () => {
    const betInput = document.getElementById("bet-amount");
    const bet = parseInt(betInput.value);
    const balanceElement = document.getElementById("balance");
    const telegramId = Telegram.WebApp.initDataUnsafe?.user?.id;

    if (!telegramId) {
      alert("–û—à–∏–±–∫–∞: Telegram ID –Ω–µ –Ω–∞–π–¥–µ–Ω.");
      return;
    }

    if (!bet || bet <= 0) {
      alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É.");
      return;
    }

    // –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ—à–ª—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    resultElement.textContent = "";

    // –ù–∞—á–∞—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é
    slotsContainer.classList.add("spinning");
    slots.forEach((slot) => slot.textContent = "üé∞"); // –í–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç

    try {
      // –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∏–≥—Ä—ã –≤ —Å–ª–æ—Ç—ã
      const response = await fetch("/api/slots", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ telegram_id: telegramId, bet }),
      });

      const result = await response.json();
      if (!response.ok) {
        throw new Error(result.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–≥—Ä–µ –≤ —Å–ª–æ—Ç—ã.");
      }

      // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      setTimeout(() => {
        slotsContainer.classList.remove("spinning");

        // –û–±–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ—Ç–æ–≤
        const slotValues = result.slots || ["üçí", "üçã", "üçâ"]; // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ—Ç–æ–≤
        slots.forEach((slot, index) => {
          slot.textContent = slotValues[index];
          slot.classList.add("stopped");
        });

        // –û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        balanceElement.textContent = `–í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${result.new_balance} –º–æ–Ω–µ—Ç`;
        resultElement.textContent = result.message;
      }, 3000); // –ò–º–∏—Ç–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤—Ä–∞—â–µ–Ω–∏—è
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞:", error);
      alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
  });
});
// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
